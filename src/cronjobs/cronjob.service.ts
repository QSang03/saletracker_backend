import { Injectable, Logger } from '@nestjs/common';

@Injectable()
export class CronjobService {
  private readonly logger = new Logger(CronjobService.name);

  constructor() {
    this.logger.log(
      'üéØ [CronjobService] Service ch√≠nh ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o - C√°c cronjob ri√™ng bi·ªát s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω b·ªüi c√°c service chuy√™n bi·ªát',
    );
    this.logger.log('üìã C√°c cronjob service ƒëang ho·∫°t ƒë·ªông:');
    this.logger.log('  - DebtStatisticsCronjobService: Th·ªëng k√™ c√¥ng n·ª£ h√†ng ng√†y');
    this.logger.log('  - DebtHistoriesCronjobService: Clone v√† reset debt logs');
    this.logger.log('  - DatabaseCleanupCronjobService: D·ªçn d·∫πp database change log');
    this.logger.log('  - OrderCleanupCronjobService: ·∫®n order details h·∫øt h·∫°n');
  }

  /**
   * Method ƒë·ªÉ l·∫•y th√¥ng tin v·ªÅ t·∫•t c·∫£ cronjob services
   */
  getCronjobInfo(): string[] {
    return [
      'DebtStatisticsCronjobService: Backup th·ªëng k√™ c√¥ng n·ª£ h√†ng ng√†y l√∫c 23h',
      'DebtHistoriesCronjobService: Clone debt logs sang histories v√† reset l√∫c 23h',
      'DatabaseCleanupCronjobService: D·ªçn d·∫πp database change log theo batch l√∫c 23h',
      'OrderCleanupCronjobService: ·∫®n order details h·∫øt h·∫°n ho·∫∑c gia h·∫°n extended l√∫c 01h',
    ];
  }
}
